name: Terraform

on:
  workflow_call:
    secrets:
      AZURE_CLIENT_ID:
        required: true
      AZURE_TENANT_ID:
        required: true
      AZURE_SUBSCRIPTION_ID:
        required: true

jobs:
  setup-terraform:
    name: Setup Terraform
    runs-on: self-hosted
    environment: production

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Azure Login
        uses: azure/login@v1
        with:
          client-id: ${{ secrets.AZURE_CLIENT_ID }}
          tenant-id: ${{ secrets.AZURE_TENANT_ID }}
          subscription-id: ${{ secrets.AZURE_SUBSCRIPTION_ID }}
          enable-AzPSSession: false
          auth-type: IDENTITY

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v1

      - name: Terraform Init
        run: terraform init

      - name: Terraform Format
        run: terraform fmt -check

      - name: Terraform Plan
        if: github.event_name == 'pull_request' || github.event_name == 'push' || github.event_name == 'schedule'
        id: tf-plan
        run: |
          terraform plan -input=false | tee plan_output.log

      - name: Prevent Only Destroy Operations (Scheduled Runs Only)
        if: github.event_name == 'schedule'
        run: |
          echo "üîç Checking for destroy actions using Terraform output..."
          PLAN_OUTPUT=$(terraform plan -no-color)

          if echo "$PLAN_OUTPUT" | grep -q "No changes. Your infrastructure matches the configuration."; then
            echo "‚úÖ No changes detected. Continuing workflow..."
            exit 0  # Allow the workflow to continue
          fi

          destroy_count=$(echo "$PLAN_OUTPUT" | grep -Eo '[0-9]+ to destroy' | awk '{sum+=$1} END {print sum}')
          
          destroy_count=${destroy_count:-0}

          if [[ "$destroy_count" -gt 0 ]]; then
            echo "‚ùå Terraform plan detected $destroy_count destroy operations! Stopping workflow."
            exit 1  # Stop workflow on destroy actions
          else
            echo "‚úÖ No destroy operations detected. Continuing workflow..."
          fi

      - name: Post Terraform Plan result in PR
        if: github.event_name == 'pull_request'
        uses: actions/github-script@v6
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            PLAN_OUTPUT=$(cat plan_output.log)
            
            if [ ${#PLAN_OUTPUT} -gt 60000 ]; then
              PLAN_OUTPUT="${PLAN_OUTPUT: -60000}"
            fi


            curl -X POST \
              -H "Authorization: token $GITHUB_TOKEN" \
              -H "Content-Type: application/json" \
              -d @- << EOF
            {
              "owner": "$GITHUB_REPOSITORY_OWNER",
              "repo": "$GITHUB_REPOSITORY",
              "issue_number": $PR_NUMBER,
              "body": "### Terraform Plan Output\n\`\`\`\n$PLAN_OUTPUT\n\`\`\`"
            }
            EOF

      - name: Terraform Apply
        if: github.ref == 'refs/heads/main' && (github.event_name == 'push' || github.event_name == 'schedule')
        run: terraform apply -auto-approve -input=false
